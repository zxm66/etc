
#user  nobody;
# master process's user is root . this is worker process's user.
# master process receive user's request
# worker process system dispatcher.
worker_processes  1;

# worker_processes auto;
# auto is setted is based on your computer's cpu
#

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;


# run/nginx.pid is used when nginx reload .
# nginx -s start and create the file ,and nginx -s stop , to signal the run/nginx.pid
#
#pid        logs/nginx.pid;


events {
# every worker process can create connect count.
    worker_connections  1024;
}

# this is http config
#
http {
    include       mime.types;
    default_type  application/octet-stream;

#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                  '$status $body_bytes_sent "$http_referer" '
#                  '"$http_user_agent" "$http_x_forwarded_for"';

#access_log  logs/access.log  main;

    sendfile        on;
#tcp_nopush     on;

#keepalive_timeout  0;
    keepalive_timeout  65;

#gzip  on;




# log_format config

    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $bytes_sent '
        '"$http_referer" "$http_user_agent" "$gzip_ratio"';

#    access_log /spool/logs/nginx-access.log compression buffer=32k;
    access_log  /usr/local/var/log/nginx/access.log compression buffer=32k;
    error_log  /usr/local/var/log/nginx/error.log info ;
    server {
        listen       8081;
        server_name  localhost;

#charset koi8-r;

#access_log  logs/host.access.log  main;
#root html;  /usr/local/Cellar/nginx/1.19.0/html
#copy nginx.conf
        location / {
            root   /Users/zhangxiaomin/workSpace/html;
            index  index.html index.htm;
        }
        location /image/ {
            alias /Users/zhangxiaomin/workSpace/test/img/ ;
        }
        location /vimwiki/ {
            alias /Users/zhangxiaomin/vimwiki_html/ ;
        }
# like up one
        location ~ \.(gif|jpg|png)$ {
            root /Users/zhangxiaomin/Pictures;
        }

        location /baidu/ {
            proxy_pass https://www.baidu.com ;
        }
        location /jd/ {
            proxy_pass http://jd.com ;
        }
#  forward to weibo ,but not cache ,and must repeat login
        location /weibo/ {
            proxy_pass  https://weibo.com/;
        }
        location /github/ {
            proxy_pass  https://github.com/;
        }
        location /spring/ {
            proxy_pass  https://spring.io/;
        }
        location /process/ {
            proxy_pass  https://www.processon.com/;
        }
        location /neo4j/ {
            proxy_pass  http://localhost:7474/browser/ ;
        }
        location /rcvdesk/ {
            proxy_pass https://rcvdesk.e-chinalife.com/vpn/index.html ;
        }
        location /zookeeper/ {
            proxy_pass https://zookeeper.apache.org/;
        }
# forward to jianshu, and lack css style
        location /jianshu/ {
            proxy_pass https://www.jianshu.com/;
        }
        location /test/ {
            proxy_pass http://localhost:8088/api/;
        }
        location /arthas/ {
            proxy_pass http://localhost:9999/;
        }

# error_page config
        error_page 403      http://example.com/forbidden.html;
        error_page  404              /404.html;
        location = /404.html {
            root  /Users/zhangxiaomin/workSpace/html;
        }

# redirect server error pages to the static page /50x.html
#
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /Users/zhangxiaomin/workSpace/html;
        }

# proxy the PHP scripts to Apache listening on 127.0.0.1:80
#
#location ~ \.php$ {
#    proxy_pass   http://127.0.0.1;
#}

# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#
#location ~ \.php$ {
#    root           html;
#    fastcgi_pass   127.0.0.1:9000;
#    fastcgi_index  index.php;
#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#    include        fastcgi_params;
#}

# deny access to .htaccess files, if Apache's document root
# concurs with nginx's one
#
#location ~ /\.ht {
#    deny  all;
#}
    }


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#    listen       8000;
#    listen       somename:8080;
#    server_name  somename  alias  another.alias;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}


# HTTPS server
#
#server {
#    listen       443 ssl;
#    server_name  localhost;

#    ssl_certificate      cert.pem;
#    ssl_certificate_key  cert.key;

#    ssl_session_cache    shared:SSL:1m;
#    ssl_session_timeout  5m;

#    ssl_ciphers  HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers  on;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}
# include keyword like the c langrage #include<>.
#

    include servers/*;

                     }


                     mail{


                     }

                     stream{


                     }


